'''
@begin Overall_Worflow @desc Overall Workflow for the farmersmarkets dataset
@in farmersmarkets.csv @uri file://users/data/farmersmarkets.csv

    @begin EstablishUseCases @desc Examine possible analysis that can be carried out using the dataset
    @in farmersmarkets.csv @uri file://users/data/farmersmarkets.cv
    @end CleanWithOpenRefine

    @begin CleanWithOpenRefine @desc Using OpenRefine clean farmersmarkets.csv
    @in farmersmarkets.csv @uri file://users/data/farmersmarkets.cv
    @in EstablishUseCases
    @out farmersmarkets_OpenRefine.csv @uri file://users/data/farmersmarkets_OpenRefine.csv
    @end CleanWithOpenRefine

    @begin CleanWithPython @desc Use Python to derive zipcodes from Latitude and Longitude
    @in farmersmarkets_OpenRefine.csv @uri file://users/data/farmersmarkets_OpenRefine.csv
    @out farmersmarkets_Python.csv @uri file://users/data/farmersmarkets_Python.csv
    @end FillWithPython

    @begin BuildRelationalModel @desc Use Sqlite to create database and build Relational model
    @in  farmersmarkets_Python.csv @uri file://users/data/farmersmarkets_Python.csv
    @out  farmersmarkets_Python.csv @uri file://users/data/farmersmarkets_Python.csv
    @end BuildRelationalModel

    @begin IntegrityCheckWithSQLite @desc Use sqlite to check for integrity constraints
    @in  farmersmarkets_Python.csv @uri file://users/data/farmersmarkets_Python.csv
    @out  farmersmarkets_Python.csv @uri file://users/data/farmersmarkets_Python.csv
    @end IntegrityCheckWithSQLite

    @begin CleanWithSqlite @desc Use sqlite to clean IC Violations
    @in  farmersmarkets_Python.csv @uri file://users/data/farmersmarkets_Python.csv
    @out farmersmarket_SQLitedb.csv @uri file://users/data/farmersmarket_SQLitedb.csv
    @end CleanWithSqlite

@out farmersmarket_SQLitedb.csv @uri file://users/data/farmersmarket_SQLitedb.csv
@end Overall_Data_Cleaning
'''
